#!/bin/bash

test -z "${DEBUG}" || set -x

: ${UPDATE_LIST:=}

for d in $UPDATE_LIST; do
  # test for git repo
  test -d $d/.git || { echo "WARNING: $d is not a git repo" >&2; continue; }
  pushd "$d" > /dev/null

  git diff --no-ext-diff --quiet --exit-code \
    || { echo "WARNING: unable to update $d: DIRTY" >&2; continue; }

  # current branch
  _branch=$(git symbolic-ref HEAD 2>/dev/null)
  test -n "$_branch" || _branch=$(git describe --contains --all HEAD)
  test -n "$_branch" || _branch=$(git rev-parse --short HEAD)
  _branch=${_branch##refs/heads/}

  case $_branch in
    master)  git pull --quiet origin $_branch > /dev/null                   ;;
    main)    git pull --quiet origin $_branch > /dev/null                   ;;
    ?|*)     echo "WARNING: unable to update $d: not on main" >&2; continue ;;
  esac
  popd > /dev/null
done
